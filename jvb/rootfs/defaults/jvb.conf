{{ $JVB_TCP_PORT := .Env.JVB_TCP_PORT | default "4443" }}
{{ $JVB_TCP_MAPPED_PORT := .Env.JVB_TCP_MAPPED_PORT | default $JVB_TCP_PORT }}
{{ $PUBLIC_URL_DOMAIN := .Env.PUBLIC_URL | default "https://localhost:8443" | trimPrefix "https://" | trimSuffix "/" -}}
{{ $WS_DOMAIN := .Env.JVB_WS_DOMAIN | default $PUBLIC_URL_DOMAIN -}}
{{ $WS_SERVER_ID := .Env.JVB_WS_SERVER_ID | default .Env.LOCAL_ADDRESS -}}

videobridge {
    ep-connection-status {
        # How long we'll wait for an endpoint to *start* sending
        # data before we consider it 'inactive'
        # set it much larger than default (15s) for the case of big meeting
        # with huge lagging time
        first-transfer-timeout=90 seconds

        # How long an endpoint can be 'inactive' before it will
        # be considered disconnected
        max-inactivity-limit=3 seconds

        # How often we check endpoint's connectivity status
        check-interval=1000 milliseconds
    }
    ice {
        udp {
            port = {{ .Env.JVB_PORT }}
        }
        tcp {
            enabled = {{ not .Env.JVB_TCP_HARVESTER_DISABLED }}
            port = {{ .Env.JVB_TCP_PORT }}
{{ if not (eq $JVB_TCP_PORT $JVB_TCP_MAPPED_PORT) }}
            mapped-port = {{ $JVB_TCP_MAPPED_PORT }}
{{ end }}
        }
    }
    apis {
        xmpp-client {
            configs {
                shard {
                    HOSTNAME = "{{ .Env.XMPP_SERVER }}"
                    DOMAIN = "{{ .Env.XMPP_AUTH_DOMAIN }}"
                    USERNAME = "{{ .Env.JVB_AUTH_USER }}"
                    PASSWORD = "{{ .Env.JVB_AUTH_PASSWORD }}"
                    MUC_JIDS = "{{ .Env.JVB_BREWERY_MUC }}@{{ .Env.XMPP_INTERNAL_MUC_DOMAIN }}"
                    MUC_NICKNAME = "{{ .Env.HOSTNAME }}"
                    DISABLE_CERTIFICATE_VERIFICATION = true
                }
            }
        }
    }
    stats {
        enabled = true
        # The interval at which stats are gathered.
        interval = 5 seconds
    }
    websockets {
        enabled = true
        domain = "{{ .Env.XMPP_DOMAIN }}"
        tls = true
        server-id = "{{ .Env.SWARM_ADDRESS }}"
    }
    http-servers {
        public {
            port = 9090
        }
    }
    cc {
        trust-bwe = true
    }
    octo {
        # Whether or not Octo is enabled
        enabled=true

        # A string denoting the 'region' of this JVB.  This region
        # will be used by Jicofo in the selection of a bridge for
        # a client by comparing it to the client's region.
        # Must be set when 'enabled' is true
        # in vmeeting, we only have one region (korea), and we use
        # octo for load-balancing big conferences
        region="asia"

        # The address on which the Octo relay should bind
        # Must be set when 'enabled' is true
        bind-address={{ .Env.LOCAL_ADDRESS }}

        # The port to which the Octo relay should bind
        bind-port={{ .Env.OCTO_BIND_PORT }}

        # The address which controls the public address which
        # will be part of the Octo relayId
        public-address={{ .Env.PUBLIC_ADDRESS }}

        # The size of the incoming octo queue. This queue is per-remote-endpoint,
        # so it matches what we use for local endpoints
        recv-queue-size=1024

        # The size of the outgoing octo queue.  This is a per-originating-endpoint
        # queue, so assuming all packets are routed (as they currently are for Octo)
        # it should be the same size as the transceiver recv queue in
        # jitsi-media-transform.  Repeating the description from there:
        #   Assuming 300pps for high-definition, 200pps for standard-definition,
        #   100pps for low-definition and 50pps for audio, this queue is fed
        #   650pps, so its size in terms of millis is 1024/650*1000 ~= 1575ms.
        send-queue-size=1024
    }
}

ice4j {
    harvest {
        mapping {
            stun {
{{ if .Env.JVB_STUN_SERVERS }}
                addresses = [ "{{ join "\",\"" (splitList "," .Env.JVB_STUN_SERVERS) }}" ]
{{ end }}
            }
        }
    }
}

{{ if (.Env.ENABLE_INDIVIDUAL_REC | default "0" | toBool) }}
jmt {
    video2pcap {
        enabled = {{ .Env.ENABLE_INDIVIDUAL_REC | default "0" | toBool }}
        directory = "{{ .Env.REC_PCAP_DIR }}"
    }
}
{{ end }}
